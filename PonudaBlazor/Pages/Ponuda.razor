@page "/ponuda"
@using InfrastructureFE
@using PonudaBlazor.Components.PonudaComponents
@using ViewModels
@inject PonudaViewModel PonudaViewModel;
@inject NavigationManager NavigationManager;

<PonudaLista Ponude="@PonudaViewModel.Ponude.Data" OnClickCallBack="@OnClick"></PonudaLista>
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <span class="page-link" @onclick="PonudaViewModel.PrevoiusPage">Previous</span>
        </li>
        @foreach (var number in PonudaViewModel.CreateSpread())
        {
            @if (number == PonudaViewModel.Ponude.Pagination.CurrentPage)
            {
                <li class="page-item"><span class="page-link" @onclick="()=>PonudaViewModel.NavigateToPage(number)">@number</span></li>

            }
            else
            {
                <li class="page-item active" aria-current="page">
                    <span class="page-link" @onclick="()=>PonudaViewModel.NavigateToPage(number)">@number</span>
                </li>
            }

        }
        <li class="page-item">
            <span class="page-link" @onclick="PonudaViewModel.NextPage">Next</span>
        </li>
    </ul>
</nav>
@code
{
    protected override async Task OnInitializedAsync()
    {
        await PonudaViewModel.OnInit();
    }
    private void OnClick(Guid id)
    {
        NavigationManager.NavigateTo($"ponuda/{id}");
    }
}