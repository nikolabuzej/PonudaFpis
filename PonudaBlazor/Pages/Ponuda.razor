@page "/ponuda"
@using FrontEndDomain.ListViewConfiguration
@using InfrastructureFE
@using PonudaBlazor.Components.PonudaComponents
@using ViewModels
@inject PonudaViewModel PonudaViewModel;
@inject NavigationManager NavigationManager;



 <EditForm class="row"  Model=@PonudaViewModel.Ponude.Pagination OnValidSubmit=@PonudaViewModel.Pretrazi>
        <div class="col-10">
            <InputText class="form-control" @bind-Value=@PonudaViewModel.Ponude.Pagination.SearchText>Tekst pretrage</InputText>
        </div>
        <div class="col-2">
        <button type="submit" class="btn btn-primary">Pretrazi</button>
        </div>
    </EditForm>

<div class="row">
    <div class="col">
        <label>Sortiraj po</label>
        <select class="form-select" @onchange=@ChangeSortProperty>
            @foreach (var prop in Enum.GetValues(typeof(SortProperty)).Cast<SortProperty>())
            {
                <option value="@prop">@prop.ToString()</option>
            }
        </select>
    </div>
    <div class="col">
        <label>Smer</label>
        <select class="form-select" @onchange=@ChangeSortOrder>
            @foreach (var prop in Enum.GetValues(typeof(SortOrder)).Cast<SortOrder>())
            {
                <option value="@prop">@prop.ToString()</option>
            }
        </select>
    </div>
    <div class="col">
        <label>Broj ponuda</label>
        <select class="form-select" @onchange=@ChangePageSize>
            @foreach (int size in Enumerable.Range(1, 3).Select(i => i * 2))
            {
                <option value="@size">@size.ToString()</option>
            }
        </select>
    </div>
</div>
<PonudaLista Ponude="@PonudaViewModel.Ponude.Data" OnClickCallBack="@OnClick"></PonudaLista>
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        <li class="page-item">
            <span class="page-link" @onclick="PonudaViewModel.PrevoiusPage">Previous</span>
        </li>
        @foreach (var number in PonudaViewModel.CreateSpread())
        {
            @if (number == PonudaViewModel.Ponude.Pagination.CurrentPage)
            {
                <li class="page-item"><span class="page-link" @onclick="()=>PonudaViewModel.NavigateToPage(number)">@number</span></li>

            }
            else
            {
                <li class="page-item active" aria-current="page">
                    <span class="page-link" @onclick="()=>PonudaViewModel.NavigateToPage(number)">@number</span>
                </li>
            }

        }
        <li class="page-item">
            <span class="page-link" @onclick="PonudaViewModel.NextPage">Next</span>
        </li>
    </ul>
</nav>
@code
{
    private async Task ChangeSortProperty(ChangeEventArgs args)
    {
        Enum.TryParse(args.Value?.ToString(), out SortProperty value);
        await PonudaViewModel.PromeniSortProperty(value);
    }
    private async Task ChangeSortOrder(ChangeEventArgs args)
    {
        Enum.TryParse(args.Value?.ToString(), out SortOrder value);
        await PonudaViewModel.PromeniSortOrder(value);
    }
    private async Task ChangePageSize(ChangeEventArgs args)
    {
        int.TryParse(args.Value?.ToString(), out int size);

        await PonudaViewModel.PromeniPageSize(size);
    }
  
    protected override async Task OnInitializedAsync()
    {
        await PonudaViewModel.OnInit();
    }
    private void OnClick(Guid id)
    {
        NavigationManager.NavigateTo($"ponuda/{id}");
    }
}